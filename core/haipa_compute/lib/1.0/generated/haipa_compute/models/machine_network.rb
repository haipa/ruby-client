# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Haipa::Client::Compute::V1_0
  module Models
    #
    # Model object.
    #
    #
    class MachineNetwork

      include Haipa::Client

      # @return
      attr_accessor :machine_id

      # @return [String]
      attr_accessor :adapter_name

      # @return [Array<String>]
      attr_accessor :ip_v4addresses

      # @return [Array<String>]
      attr_accessor :ip_v6addresses

      # @return [String]
      attr_accessor :i_pv4default_gateway

      # @return [String]
      attr_accessor :i_pv6default_gateway

      # @return [Array<String>]
      attr_accessor :dns_server_addresses

      # @return [Array<String>]
      attr_accessor :ip_v4subnets

      # @return [Array<String>]
      attr_accessor :ip_v6subnets

      # @return [Machine]
      attr_accessor :machine


      #
      # Mapper for MachineNetwork class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'MachineNetwork',
          type: {
            name: 'Composite',
            class_name: 'MachineNetwork',
            model_properties: {
              machine_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'machineId',
                type: {
                  name: 'String'
                }
              },
              adapter_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'adapterName',
                type: {
                  name: 'String'
                }
              },
              ip_v4addresses: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ipV4Addresses',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              ip_v6addresses: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ipV6Addresses',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              i_pv4default_gateway: {
                client_side_validation: true,
                required: false,
                serialized_name: 'iPv4DefaultGateway',
                type: {
                  name: 'String'
                }
              },
              i_pv6default_gateway: {
                client_side_validation: true,
                required: false,
                serialized_name: 'iPv6DefaultGateway',
                type: {
                  name: 'String'
                }
              },
              dns_server_addresses: {
                client_side_validation: true,
                required: false,
                serialized_name: 'dnsServerAddresses',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              ip_v4subnets: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ipV4Subnets',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              ip_v6subnets: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ipV6Subnets',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              machine: {
                client_side_validation: true,
                required: false,
                serialized_name: 'machine',
                type: {
                  name: 'Composite',
                  class_name: 'Machine'
                }
              }
            }
          }
        }
      end
    end
  end
end
